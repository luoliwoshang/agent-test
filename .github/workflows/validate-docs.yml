name: 验证文档链接安全性

on:
  # 在PR和push到main分支时触发
  push:
    branches: [ main ]
    paths:
      - '**.md'
      - 'scripts/validate-links.py'
      - '.github/workflows/validate-docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - '**.md'
      - 'scripts/validate-links.py'
      - '.github/workflows/validate-docs.yml'
  
  # 允许手动触发
  workflow_dispatch:

jobs:
  validate-links:
    name: 验证文档链接
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        
      - name: 设置Python环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: 使脚本可执行
        run: chmod +x scripts/validate-links.py
        
      - name: 验证文档链接安全性
        run: |
          echo "🚀 开始验证文档链接安全性..."
          python3 scripts/validate-links.py
          
      - name: 上传验证报告
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: link-validation-report
          path: |
            *.md
            scripts/validate-links.py
          retention-days: 30

  # 额外的安全检查job
  security-check:
    name: 安全检查
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        
      - name: 检查敏感信息
        run: |
          echo "🔍 检查文档中是否包含敏感信息..."
          
          # 检查是否包含密钥、密码等敏感信息
          if grep -rE "(password|secret|key|token)[:=]\s*['\"][^'\"]{8,}['\"]" *.md; then
            echo "❌ 发现可能的敏感信息泄露"
            exit 1
          fi
          
          # 检查是否包含真实的API密钥格式
          if grep -rE "(sk-[a-zA-Z0-9]{48}|AIza[0-9A-Za-z_-]{35})" *.md; then
            echo "❌ 发现可能的API密钥"
            exit 1
          fi
          
          # 检查是否包含真实IP地址（排除示例IP）
          if grep -rE "([0-9]{1,3}\.){3}[0-9]{1,3}" *.md | grep -v -E "(127\.|192\.168\.|10\.|172\.1[6-9]\.|172\.2[0-9]\.|172\.3[0-1]\.|0\.0\.0\.0|255\.255\.255\.255|example|demo|test)" ; then
            echo "⚠️  发现真实IP地址，请确认是否为示例"
            # 不退出，只是警告
          fi
          
          echo "✅ 敏感信息检查通过"
          
      - name: 检查恶意脚本
        run: |
          echo "🛡️  检查文档中是否包含恶意脚本..."
          
          # 检查是否包含可疑的脚本标签
          if grep -rE "<script[^>]*>" *.md; then
            echo "❌ 发现script标签，可能包含恶意脚本"
            exit 1
          fi
          
          # 检查是否包含javascript: 协议
          if grep -rE "javascript:" *.md; then
            echo "❌ 发现javascript:协议，可能有安全风险"
            exit 1
          fi
          
          # 检查是否包含data: 协议的可疑内容
          if grep -rE "data:[^,]*script" *.md; then
            echo "❌ 发现可疑的data:协议内容"
            exit 1
          fi
          
          echo "✅ 恶意脚本检查通过"